"""
Django settings for fu5ion_museosbit project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'nd$(th6jrx38a08c!!x*+4fp46qu64!wxz06=q_gkl#cb8h_68'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Aplicaciones definidas

INSTALLED_APPS = [
    'registration', # Registro y login de usuarios.
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ckeditor', # Ckeditor para agregar el campo RichTextFields en models para poder editar el texto de los museos mejor. 
    'core', # Carpeta core donde guardamos los templates y acciones principales.
    'contact', # Contact, formulario de contacto.
    'social.apps.SocialConfig', # Social, para poder cambiar las redes sociales desde el panel.
    'museos.apps.MuseosConfig', # Museos, app para poder agregar, editar y borrar museos.
    'profiles', # Perfiles, podremos modificar usuarios.
    'django_extensions',
    'import_export',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'fu5ion_museosbit.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'], # Cambiamos el  directorio principal a templates donde estaria nuestros archivos de admin modificados.
        #'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social.processors.ctx_dict', 
            ],
            'loaders': [
                # Agregamos loaders para que carge los templates del directorio
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
            ]
        },
    },
]

WSGI_APPLICATION = 'fu5ion_museosbit.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'America/Montevideo'

USE_I18N = True

USE_L10N = True

USE_TZ = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/' # Carpeta static para todos los subdirectorios.
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"), # Carpeta static para los archivos templates base para el panel admin.
]


# -----------------------------------------------------------------------------------------------------------------
#SELECCIONAR:
# 1 - MAILTRAP

# Configuración de mail, en este caso utilizamos mailtrap para comprobar que los emails del formulario se enviaron.
# Mailtrap de prueba:
# Email : museosenlanochebit@gmail.com
# Contraseña: bitmuseo
EMAIL_HOST = 'smtp.mailtrap.io'
EMAIL_HOST_USER = '8dc8fbbec10bb5'
EMAIL_HOST_PASSWORD = '180625d1b0bf13'
EMAIL_PORT = '2525'

# 2 - ENVIO INTERNO

# Pruebas para emails backends (para comprobar que funciona el cambio de contraseña).
#if DEBUG:
#    EMAIL_BACKEND = "django.core.mail.backends.filebased.EmailBackend"
#    EMAIL_FILE_PATH = os.path.join(BASE_DIR, "sent_emails")
#else:
    # Aqui hay que configurar un email real para producción
#    pass

# -----------------------------------------------------------------------------------------------------------------

# Auth redirects
LOGIN_REDIRECT_URL = 'home' # Después de loguerase redirecciona a home.                   
LOGOUT_REDIRECT_URL = 'home' # Al desloguerase volvemos a home.

# Media Files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
 
# Aquí ponemos la configuración de ckeditor.
CKEDITOR_CONFIGS = {
    'default': {
        'enterMode': 2, 
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink']
        ]
    }
}

